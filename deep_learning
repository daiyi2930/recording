## CNN-用keras分辨猫，狗，摩托车或汽车的图片

数据集中包含超过3000张带有猫，狗，摩托车或汽车的图片；
数据集已经分为训练，测试和验证集三个file； 

完成以下任务： 

任务1: 

（CNN架构）
将图片重新缩放为32×32。
定义CNN架构，其中以下层按以下顺序堆叠在一起： 
1.具有32个3×3滤波器的卷积层。 2.最大池化层，大小为2×2。 3.具有64个3×3滤波器的卷积层。 4.最大池化层，大小为2×2。 5.具有128个3×3滤波器的卷积层。 6.最大池化层，大小为2×2。 7.具有128个3×3滤波器的卷积层。 8.最大池化层，大小为2×2。 9.具有512个单元的致密层。 10.具有k单位和softmax激活功能的致密层。 对所有层使用sigmoid激活函数，但最后一个使用softmax激活函数。 使用上面未指定的参数的默认值。 a）确定k的正确值 b）原有code的CNN的架构存在问题，修正这个问题。 （在不更改图层数，过滤器数量，过滤器大小或单元数的情况下执行此操作）

任务2 （从头开始训练小型CNN）在回答上述问题后，使用以下参数值训练（固定）CNN： •损失函数=交叉熵; •优化器RMSprop，学习率= 0.1; •指标=准确度; •培训/验证生成器的批量大小（如果使用它们）= 20; •epochs = 10。 培训CNN并根据时期绘制训练/验证准确度和训练/验证损失。 a）你遇到了哪些问题？ b）你可以更改两个参数以显着改善结果。 请更改这两个参数的值以改善结果，讨论了这些参数如何影响CNN的性能。

任务3（优化学习率） a）确定学习率的可能值范围，即“足够宽”。 特别是，您应该尝试保证您的间隔包含学习率的最佳值。 认为你的间隔足够“宽”。 b）提供“坏”，“好”和“非常好”的学习率的例子。 激励你的答案。

任务4 使用VGG16作为特征提取器进行数据增强（即删除顶层并冻结VGGnet）。 将训练/验证准确度和训练/验证损失绘制为时期（epochs = 20）的函数。

任务5 使用任何你学过的技能，以提高CNN的准确性。
